---
import { WhereToStreamQwik } from "./WhereToStreamQwik";
interface Props {
  id: number;
  isMovie?: boolean;
}
const { id, isMovie = true } = Astro.props;
const options = {
  method: "GET",
  headers: {
    accept: "application/json",
    Authorization: `Bearer ${import.meta.env.PUBLIC_TMDB_AUTH}`,
  },
};
const url = new URL(
  `https://api.themoviedb.org/3/${isMovie ? "movie" : "tv"}/${id}/watch/providers`
);
const response = await fetch(url, options);
const data = await response.json();
let countryCodes: string[] = [];
for (const country in data.results) {
  if (data.results[country].hasOwnProperty("flatrate"))
    countryCodes.push(country);
}
---

<div>
  {
    data.results && (
      <WhereToStreamQwik data={data.results} countryCodes={countryCodes} />
    )
  }
</div>

<!-- <div class="">
  <div class="flex gap-2">
    {
      countryProviders.hasOwnProperty("flatrate") ? (
        countryProviders.flatrate.map((provider: { logo_path: string }) => (
          <img
            class=""
            src={`https://media.themoviedb.org/t/p/original/${provider.logo_path}`}
            alt="asd"
          />
        ))
      ) : (
        <div>No streaming provider</div>
      )
    }
  </div>
  <CountrySwitcher countries={Object.keys(data.results)} />
</div> -->
