---
import MovieCard from "./MovieCard.astro";
import SeriesCard from "./SeriesCard.astro";

interface Props {
  id: string;
  isMovie?: boolean;
}

const { id, isMovie = true } = Astro.props;

const options = {
  method: "GET",
  headers: {
    accept: "application/json",
    Authorization: `Bearer ${import.meta.env.PUBLIC_TMDB_AUTH}`,
  },
};

const url = new URL(
  `https://api.themoviedb.org/3/${isMovie ? "movie" : "tv"}/${id}/recommendations?language=en-US&page=1`
);
const response = await fetch(url, options);
const data = await response.json();
const movies = data.results;
---

<h3 class="text-center font-bold text-2xl mt-4 text-orange-600 mb-8">
  Recommended {isMovie ? "movies" : "series"}
</h3>
<div
  class="grid grid-flow-col auto-cols-[47%] sm:auto-cols-[31%] md:auto-cols-[23%] lg:auto-cols-[15%] xl:auto-cols-[11%] gap-4 overflow-x-auto overscroll-x-contain snap-mandatory snap-x *:snap-start px-4 scroll-px-3 pb-2"
>
  {
    isMovie && movies
      ? movies.map((movie: Movie) => (
          <MovieCard
            id={movie.id}
            title={movie.title}
            poster={movie.poster_path}
            releaseDate={movie.release_date}
          />
        ))
      : movies.map((series: Movie) => (
          <SeriesCard
            id={series.id}
            title={series.title}
            poster={series.poster_path}
            releaseDate={series.release_date}
          />
        ))
  }
</div>
